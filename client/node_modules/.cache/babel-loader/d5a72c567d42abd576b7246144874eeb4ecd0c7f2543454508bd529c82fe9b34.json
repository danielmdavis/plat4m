{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Projects/plat4m/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useLayoutEffect } from 'react';\nimport './App.css';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@mui/material/Backdrop';\nimport HeaderCard from './HeaderCard';\nimport Proposition from './Proposition';\nimport Guide from './Guide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // top level react container. gets JSON data and maps to propo elements.\n  // has one footer propo poster and three header elements: title bar, accordion, and popover. \n  // API calls for get all and post one propo handled here.\n\n  let [data, setGet] = useState([]); // JSON of API data to display\n  let [quorum, setQuorum] = useState(9); // size of voter pool\n  let [inputText, setInputText] = useState(''); // tracks text of new propo entry\n  let [showValues, setShowValues] = useState(false); // show passed\n  let [showClosed, setShowClosed] = useState(false); // show failed\n\n  useLayoutEffect(() => {\n    getAll();\n  }, []); // gets all on DidMount\n\n  const getAll = () => {\n    fetch('http://localhost:3001/', {\n      // calls express api\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(req => req.json()).then(res => {\n      setGet(res); //res to state\n    });\n  };\n\n  const postNewPropo = post => {\n    //posts record to backend\n    fetch('http://localhost:3001/', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post),\n      json: true\n    });\n    data.push(post); // updates local JSON to reflect new post without API call\n    setGet(data);\n  };\n  function handleSubmit() {\n    // completes and JSONifies new record, calls poster\n    if (inputText) {\n      const post = {\n        \"id\": Math.max(...data.map(i => i.id)) + 1,\n        \"text\": inputText,\n        \"ups\": 1,\n        \"downs\": 0,\n        \"addenda\": []\n      };\n      postNewPropo(post);\n      setInputText('');\n    }\n  }\n  function handleShowClosed() {\n    setShowClosed(!showClosed);\n  }\n  function handleShowValues() {\n    setShowValues(!showValues);\n  }\n  if (showValues) {\n    window.onscroll = () => {\n      window.scroll(0, 0);\n    };\n  } else if (!showValues) {\n    window.onscroll = () => {\n      window.scroll();\n    };\n  }\n\n  // parses top level JSON objects into the three presentationally significant types- pass/fail/open\n  let openPropos = [];\n  let failedPropos = [];\n  let passedPropos = [];\n  data.forEach(propo => {\n    if (propo.ups >= quorum / 2) {\n      passedPropos.push(propo);\n    } else if (propo.downs >= quorum / 2) {\n      failedPropos.push(propo);\n    } else {\n      openPropos.push(propo);\n    }\n  });\n\n  // maps each to react\n  const openProposMapped = openPropos.map(propo => {\n    return /*#__PURE__*/_jsxDEV(Proposition, {\n      id: propo.id,\n      type: \"proposition\",\n      majority: quorum / 2,\n      claim: propo.text,\n      addenda: propo.addenda,\n      ups: propo.ups,\n      downs: propo.downs,\n      showClosed: showClosed,\n      updater: setGet,\n      allData: data\n    }, propo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  });\n  const failedProposMapped = failedPropos.map(propo => {\n    return /*#__PURE__*/_jsxDEV(Proposition, {\n      id: propo.id,\n      type: \"proposition\",\n      majority: quorum / 2,\n      claim: propo.text,\n      addenda: propo.addenda,\n      ups: propo.ups,\n      downs: propo.downs,\n      showClosed: showClosed,\n      updater: setGet,\n      allData: data\n    }, propo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  });\n  const passedProposMapped = passedPropos.map(propo => {\n    return /*#__PURE__*/_jsxDEV(Proposition, {\n      id: propo.id,\n      type: \"proposition\",\n      majority: quorum / 2,\n      claim: propo.text,\n      addenda: propo.addenda,\n      ups: propo.ups,\n      downs: propo.downs,\n      showClosed: showClosed,\n      updater: setGet,\n      allData: data\n    }, propo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"buffer-minus25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderCard, {\n      handleShowClosed: handleShowClosed,\n      handleShowValues: handleShowValues,\n      setQuorum: setQuorum,\n      className: \"app-header-outer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Guide, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      className: \"results-backdrop\",\n      sx: {\n        color: '#fff',\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: showValues,\n      onClick: handleShowValues,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"results-outer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"results-header\",\n            children: \"What we believe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this), passedProposMapped]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), openProposMapped, failedProposMapped, /*#__PURE__*/_jsxDEV(Card, {\n      className: \"proposition new-propo-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"What value should we embrace?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"new-propo-textbox\",\n        variant: \"outlined\",\n        multiline: true,\n        minRows: \"4\",\n        onChange: e => {\n          setInputText(e.target.value);\n        },\n        value: inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K+T1R3Byd5gxfLlAlbsvLPlkudg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useLayoutEffect","Card","TextField","Button","Backdrop","HeaderCard","Proposition","Guide","App","data","setGet","quorum","setQuorum","inputText","setInputText","showValues","setShowValues","showClosed","setShowClosed","getAll","fetch","mode","headers","then","req","json","res","postNewPropo","post","method","body","JSON","stringify","push","handleSubmit","Math","max","map","i","id","handleShowClosed","handleShowValues","window","onscroll","scroll","openPropos","failedPropos","passedPropos","forEach","propo","ups","downs","openProposMapped","text","addenda","failedProposMapped","passedProposMapped","color","zIndex","theme","drawer","e","target","value"],"sources":["/Users/daniel/Projects/plat4m/client/src/App.jsx"],"sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport './App.css';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@mui/material/Backdrop';\nimport HeaderCard from './HeaderCard';\nimport Proposition from './Proposition';\nimport Guide from './Guide';\n\nfunction App() {\n  // top level react container. gets JSON data and maps to propo elements.\n  // has one footer propo poster and three header elements: title bar, accordion, and popover. \n  // API calls for get all and post one propo handled here.\n\n  let [data, setGet] = useState([]) // JSON of API data to display\n  let [quorum, setQuorum] = useState(9) // size of voter pool\n  let [inputText, setInputText] = useState('') // tracks text of new propo entry\n  let [showValues, setShowValues] = useState(false) // show passed\n  let [showClosed, setShowClosed] = useState(false) // show failed\n\n  useLayoutEffect(() => { getAll() }, []) // gets all on DidMount\n\n  const getAll = () => {\n    fetch('http://localhost:3001/', { // calls express api\n      mode: 'cors',\n      headers: { 'Access-Control-Allow-Origin': '*' }\n    })\n      .then(req => req.json())\n      .then(res => {\n        setGet(res) //res to state\n      })\n  }\n\n  const postNewPropo = post => { //posts record to backend\n    fetch('http://localhost:3001/', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n       },\n      body: JSON.stringify(post),\n      json: true\n    })\n    data.push(post) // updates local JSON to reflect new post without API call\n    setGet(data) \n  }\n\n  function handleSubmit() { // completes and JSONifies new record, calls poster\n    if (inputText) {\n      const post = {\n        \"id\": Math.max(...data.map(i => i.id)) + 1,\n        \"text\": inputText,\n        \"ups\": 1,\n        \"downs\": 0,\n        \"addenda\": []\n      }\n      postNewPropo(post)\n\n      setInputText('')\n    }\n  }\n\n  function handleShowClosed() { setShowClosed(!showClosed) }\n  function handleShowValues() { setShowValues(!showValues) }\n\n  if (showValues) { \n    window.onscroll = () => { window.scroll(0, 0) }\n  } else if (!showValues) {\n    window.onscroll = () => { window.scroll() }\n  }\n\n  // parses top level JSON objects into the three presentationally significant types- pass/fail/open\n  let openPropos = []\n  let failedPropos = []\n  let passedPropos = []\n  data.forEach(propo => {\n    if ( propo.ups >= (quorum / 2) ) {\n      passedPropos.push(propo)\n    } else if (propo.downs >= (quorum / 2)) {\n      failedPropos.push(propo)\n    } else {\n      openPropos.push(propo)\n    }\n  })\n\n  // maps each to react\n  const openProposMapped = openPropos.map(propo => {\n    return(\n      <Proposition\n        key={propo.id}\n        id={propo.id}\n        type='proposition'\n        majority={quorum / 2}\n        claim={propo.text}\n        addenda={propo.addenda}\n        ups={propo.ups}\n        downs={propo.downs}\n        showClosed={showClosed}\n        updater={setGet}\n        allData={data}\n      />\n    )})\n  const failedProposMapped = failedPropos.map(propo => {\n    return(\n      <Proposition\n        key={propo.id}\n        id={propo.id}\n        type='proposition'\n        majority={quorum / 2}\n        claim={propo.text}\n        addenda={propo.addenda}\n        ups={propo.ups}\n        downs={propo.downs}\n        showClosed={showClosed}\n        updater={setGet}\n        allData={data}\n      />\n    )})\n  const passedProposMapped = passedPropos.map(propo => {\n    return(\n      <Proposition\n        key={propo.id}\n        id={propo.id}\n        type='proposition'\n        majority={quorum / 2}\n        claim={propo.text}\n        addenda={propo.addenda}\n        ups={propo.ups}\n        downs={propo.downs}\n        showClosed={showClosed}\n        updater={setGet}\n        allData={data}\n      />\n    )})\n\n  return (\n    <div className='App'> \n      <span className='buffer-minus25'></span>\n      {/* header things: title element with various children, users guide, value statement results popout */}\n      <HeaderCard \n        handleShowClosed={handleShowClosed} \n        handleShowValues={handleShowValues} \n        setQuorum={setQuorum} \n        className='app-header-outer' />\n      <Guide />\n      <br />\n      <Backdrop\n        className='results-backdrop'\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={showValues}\n        onClick={handleShowValues}>\n        <Card className='results-outer'>\n          <div className='results-inner'>\n            <h2 className='results-header'>What we believe</h2>\n            <br /><br />\n            {passedProposMapped}\n          </div>\n        </Card>\n      </Backdrop>\n      {/* end header things */}\n\n      {/* body */}\n      {openProposMapped} \n      {failedProposMapped}\n\n      {/* new propo entry */}\n      <Card className='proposition new-propo-entry'>\n        <span>What value should we embrace?</span>\n        <br />\n        <TextField \n          className='new-propo-textbox' variant='outlined'\n          multiline={true} minRows='4' \n          onChange={(e) => {setInputText(e.target.value)}} value={inputText}  />\n        <br />  \n        <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" > Submit </ Button>\n      </Card>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}