{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Projects/plat4m/client/src/Proposition.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport VotesAndTitle from './VotesAndTitle';\nimport Addendum from './Addendum';\nimport NewAddendum from './NewAddendum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Proposition(props) {\n  _s();\n  // highest level iterative child component of App, rendering the top level JSON data. \n  // displays proposition text, vote counters, and vote buttons. \n  // also contains iterative child component Addendum, which essentially reproduces this structure.\n  // API calls for propo votes are handled here.\n\n  let [addenaEntry, setAddenaEntry] = useState(); // stores text entry for new addendum until post\n\n  const stateUpdater = (id, dir) => {\n    // updates vote total in state for display without API call\n    props.allData.forEach(item => {\n      // data intensive - simplify\n      if (item.id === id) {\n        item[dir] = item[dir] + 1;\n      }\n    });\n    props.updater([...props.allData]); // passes new vote total up to parent state using callback sent down as props\n  };\n\n  const incrementYes = id => {\n    // posts vote to API RESTfully\n    fetch(`http://localhost:3001/${id}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"vote\": \"up\"\n      }),\n      json: true\n    });\n    stateUpdater(id, 'ups'); // also sends to parent\n  };\n\n  const incrementNo = id => {\n    // posts vote to API RESTfully\n    fetch(`http://localhost:3001/${id}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"vote\": \"down\"\n      }),\n      json: true\n    });\n    stateUpdater(id, 'downs'); // also sends to parent\n  };\n\n  function handleCancel() {\n    setAddenaEntry();\n  }\n  function handleClickYes() {\n    incrementYes(props.id);\n  }\n  function handleClickNo() {\n    incrementNo(props.id);\n  }\n  function handleClickYesAnd() {\n    // opens new addendum entry box\n    setAddenaEntry( /*#__PURE__*/_jsxDEV(NewAddendum, {\n      predicate: false,\n      handleCancel: handleCancel,\n      addenda: props.addenda,\n      propoId: props.id,\n      updater: props.updater,\n      allData: props.allData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this));\n    incrementYes(props.id);\n  }\n  function handleClickNoBut() {\n    // opens new addendum entry box\n    setAddenaEntry( /*#__PURE__*/_jsxDEV(NewAddendum, {\n      predicate: true,\n      handleCancel: handleCancel,\n      addenda: props.addenda,\n      propoId: props.id,\n      updater: props.updater,\n      allData: props.allData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this));\n  }\n  let openAddenda = [];\n  let openAddendaMapped = [];\n  let closedAddenda = [];\n  let closedAddendaMapped = [];\n  // parses addenda level JSON objects into open/closed\n  props.addenda.forEach(addendum => {\n    if (addendum != undefined && (addendum.ups >= props.majority || addendum.downs >= props.majority)) {\n      closedAddenda.push(addendum);\n    } else if (addendum != undefined) {\n      openAddenda.push(addendum);\n    }\n  });\n\n  // maps each to react\n  if (openAddenda) {\n    openAddendaMapped = openAddenda.map(addendum => {\n      return /*#__PURE__*/_jsxDEV(Addendum, {\n        id: addendum.id,\n        propId: props.id,\n        claim: addendum.text,\n        predicate: addendum.predicate,\n        ups: addendum.ups,\n        downs: addendum.downs,\n        majority: props.majority,\n        incrementYes: incrementYes,\n        incrementNo: incrementNo,\n        updater: props.updater,\n        allData: props.allData\n      }, props.id + addendum.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  if (closedAddenda) {\n    closedAddendaMapped = closedAddenda.map(addendum => {\n      return /*#__PURE__*/_jsxDEV(Addendum, {\n        id: addendum.id,\n        propId: props.id,\n        claim: addendum.text,\n        predicate: addendum.predicate,\n        ups: addendum.ups,\n        downs: addendum.downs,\n        majority: props.majority,\n        showClosed: props.showClosed,\n        incrementYes: incrementYes,\n        incrementNo: incrementNo,\n        updater: props.updater,\n        allData: props.allData\n      }, props.id + addendum.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  // three way style assignment - pass/fail/open\n  let status;\n  if (props.ups > props.majority) {\n    status = 'passed';\n  } else if (props.downs > props.majority) {\n    status = 'failed';\n  } else {\n    status = 'open';\n  }\n  // show/hide closed propos\n  let closedVisibility;\n  if (!props.showClosed) {\n    closedVisibility = status === 'failed' ? 'closed-hidden' : 'closed-visible';\n  } else {\n    closedVisibility = 'closed-visible';\n  }\n  // mui specific assignment\n  let statusVariant;\n  statusVariant = props.ups > props.majority ? 'outlined' : 'contained';\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: statusVariant,\n    className: `proposition ${status} ${closedVisibility}`,\n    children: [/*#__PURE__*/_jsxDEV(VotesAndTitle, {\n      claim: props.claim,\n      ups: props.ups,\n      downs: props.downs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"buffer-70\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), closedAddendaMapped, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `propo-buttongroup-outer propo-hider ${status}`,\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: \"propo-buttongroup-inner-red\",\n        orientation: \"vertical\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        \"aria-label\": \"vertical button group\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"propo-button\",\n          onClick: handleClickNo,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"propo-button\",\n          onClick: handleClickNoBut,\n          children: \"No But\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: \"propo-buttongroup-inner-blue\",\n        orientation: \"vertical\",\n        variant: \"outlined\",\n        color: \"primary\",\n        \"aria-label\": \"vertical primary button group\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"propo-button\",\n          onClick: handleClickYes,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"propo-button\",\n          onClick: handleClickYesAnd,\n          children: \"Yes And\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), openAddendaMapped, addenaEntry]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(Proposition, \"j+MK0T2ecXwgNukjwePoNeghTmA=\");\n_c = Proposition;\nvar _c;\n$RefreshReg$(_c, \"Proposition\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","ButtonGroup","VotesAndTitle","Addendum","NewAddendum","Proposition","props","addenaEntry","setAddenaEntry","stateUpdater","id","dir","allData","forEach","item","updater","incrementYes","fetch","method","mode","headers","body","JSON","stringify","json","incrementNo","handleCancel","handleClickYes","handleClickNo","handleClickYesAnd","addenda","handleClickNoBut","openAddenda","openAddendaMapped","closedAddenda","closedAddendaMapped","addendum","undefined","ups","majority","downs","push","map","text","predicate","showClosed","status","closedVisibility","statusVariant","claim"],"sources":["/Users/daniel/Projects/plat4m/client/src/Proposition.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport VotesAndTitle from './VotesAndTitle';\nimport Addendum from './Addendum';\nimport NewAddendum from './NewAddendum';\n\nexport default function Proposition(props) {\n  // highest level iterative child component of App, rendering the top level JSON data. \n  // displays proposition text, vote counters, and vote buttons. \n  // also contains iterative child component Addendum, which essentially reproduces this structure.\n  // API calls for propo votes are handled here.\n\n  let [addenaEntry, setAddenaEntry] = useState() // stores text entry for new addendum until post\n\n  const stateUpdater = (id, dir) => { // updates vote total in state for display without API call\n    props.allData.forEach((item) => { // data intensive - simplify\n      if (item.id === id) { \n        item[dir] = item[dir] + 1 \n    } })\n    props.updater([...props.allData]) // passes new vote total up to parent state using callback sent down as props\n  }\n\n  const incrementYes = id => { // posts vote to API RESTfully\n    fetch(`http://localhost:3001/${id}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n        },\n      body: JSON.stringify({ \"vote\": \"up\" }),\n      json: true\n    })\n    stateUpdater(id, 'ups') // also sends to parent\n  }\n  const incrementNo = id => { // posts vote to API RESTfully\n    fetch(`http://localhost:3001/${id}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n        },\n      body: JSON.stringify({ \"vote\": \"down\" }),\n      json: true\n    })\n    stateUpdater(id, 'downs') // also sends to parent\n  }\n\n  function handleCancel() { setAddenaEntry() }\n  function handleClickYes() { incrementYes(props.id) }\n  function handleClickNo() { incrementNo(props.id) }\n  function handleClickYesAnd() { // opens new addendum entry box\n    setAddenaEntry(\n      <NewAddendum \n      predicate={false}\n      handleCancel={handleCancel}\n      addenda={props.addenda}\n      propoId={props.id}\n      updater={props.updater}\n      allData={props.allData}\n      />\n    )\n    incrementYes(props.id)\n  }\n  function handleClickNoBut() { // opens new addendum entry box\n    setAddenaEntry(\n      <NewAddendum \n        predicate={true}\n        handleCancel={handleCancel}\n        addenda={props.addenda}\n        propoId={props.id}\n        updater={props.updater}\n        allData={props.allData}\n      />\n    )\n  }\n\n  let openAddenda = []\n  let openAddendaMapped = []\n  let closedAddenda = []\n  let closedAddendaMapped = []\n// parses addenda level JSON objects into open/closed\n  props.addenda.forEach((addendum) => {\n    if ( (addendum != undefined) && ((addendum.ups >= props.majority) || (addendum.downs >= props.majority)) ) {\n      closedAddenda.push(addendum)\n    } else if (addendum != undefined) {\n      openAddenda.push(addendum)\n    }\n  })\n\n  // maps each to react\n  if (openAddenda) {\n    openAddendaMapped = openAddenda.map(addendum => {\n      return(\n        <Addendum\n          key={props.id + addendum.id}\n          id={addendum.id}\n          propId={props.id}\n          claim={addendum.text}\n          predicate={addendum.predicate}\n          ups={addendum.ups}\n          downs={addendum.downs}\n          majority={props.majority}\n          incrementYes={incrementYes}\n          incrementNo={incrementNo}\n          updater={props.updater}\n          allData={props.allData}\n        />\n    )})\n  }\n  if (closedAddenda) {\n    closedAddendaMapped = closedAddenda.map(addendum => {\n      return(\n        <Addendum\n          key={props.id + addendum.id}\n          id={addendum.id}\n          propId={props.id}\n          claim={addendum.text}\n          predicate={addendum.predicate}\n          ups={addendum.ups}\n          downs={addendum.downs}\n          majority={props.majority}\n          showClosed={props.showClosed}\n          incrementYes={incrementYes}\n          incrementNo={incrementNo}\n          updater={props.updater}\n          allData={props.allData}\n        />\n    )})\n  }\n\n  // three way style assignment - pass/fail/open\n  let status\n  if (props.ups > props.majority) {\n    status = 'passed'\n  } else if (props.downs > props.majority) {\n    status = 'failed'\n  } else {\n    status = 'open'\n  }\n  // show/hide closed propos\n  let closedVisibility\n  if (!props.showClosed) {\n    closedVisibility = status === 'failed' ? 'closed-hidden' : 'closed-visible'\n  } else { closedVisibility = 'closed-visible' }\n  // mui specific assignment\n  let statusVariant\n  statusVariant = (props.ups > props.majority) ? 'outlined' : 'contained'\n  \n  return (\n    <Card variant={statusVariant} className={`proposition ${status} ${closedVisibility}`}>\n      <VotesAndTitle\n        claim={props.claim}\n        ups={props.ups}\n        downs={props.downs} />\n      <span className='buffer-70'></span>\n      \n      {/* closed are rendered as a bulleted list with title, seperate from voting elements */}\n      {closedAddendaMapped}    \n      <div className={`propo-buttongroup-outer propo-hider ${status}`}>\n        <ButtonGroup\n          className='propo-buttongroup-inner-red'\n          orientation='vertical'\n          variant='outlined'\n          color='secondary'\n          aria-label='vertical button group'>\n          <Button className='propo-button' onClick={handleClickNo}>No</Button>\n          <Button className='propo-button' onClick={handleClickNoBut}>No But</Button>\n        </ButtonGroup>\n\n        <ButtonGroup\n          className='propo-buttongroup-inner-blue'\n          orientation='vertical'\n          variant='outlined'\n          color='primary'\n          aria-label='vertical primary button group'>\n          <Button className='propo-button' onClick={handleClickYes}>Yes</Button>\n          <Button className='propo-button' onClick={handleClickYesAnd}>Yes And</Button>\n        </ButtonGroup>\n      </div>\n      {/* list of pending addenda votes, and entry box if open */}\n      {openAddendaMapped}\n      {addenaEntry}\n    </Card>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}